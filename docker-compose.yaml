---
version: '2.1'

volumes:
  etcd:

services:
  aperture:
    image: lightninglabs/aperture:v0.1.18-beta
    network_mode: host
    volumes:
      - ./aperture/aperture.yaml:/root/.aperture/aperture.yaml
      - ./aperture/lnd:/root/.lnd
    depends_on:
      - api
    logging:
      driver: "json-file"
      options:
        max-size: 100m

  api:
    build:
      context: ./api
    image: demo-flask-prom:v0.1.1-alpha
    ports:
      - "5000:5000"
    logging:
      driver: "json-file"
      options:
        max-size: 100m
    environment:
      - FLASK_APP=/app/api.py
    command: ["python", "-m", "flask", "run", "--host=0.0.0.0"]

  etcd:
    image: bitnami/etcd:3.5.3
    container_name: etcd 
    restart: unless-stopped
    ports:
      - 2379:2379
      - 2380:2380
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_AUTO_COMPACTION_MODE=revision
    volumes:
      - etcd

#  prometheus:
#    image: docker.io/prom/prometheus:v2.34.0
#    depends_on:
#      - api
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:z
#    logging:
#      driver: "json-file"
#      options:
#        max-size: 100m
#    ports:
#      - "9090:9090"

#  grafana:
#    image: docker.io/grafana/grafana:8.4.6
#    depends_on:
#      - prometheus
#    volumes:
#      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:z
#      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:z
#      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:z
#      - ./grafana/dashboards:/var/lib/grafana/dashboards:z
#    logging:
#      driver: "json-file"
#      options:
#        max-size: 100m
#    ports:
#      - "3000:3000"

#  tor:
#    image: guggero/torproxy
#    container_name: tor
#    restart: unless-stopped
#    ports:
#      - 9050:9050
#      - 9051:9051
#    networks:
#      - regtest
#    environment:
#      - CTRL_PORT=0.0.0.0:9051
#      - PASSWORD=torcontrolpassword

#  loadgen:
#    build:
#      context: ./loadgen
#    image: loadgen:latest
#    depends_on:
#      - api
#    environment:
#      - "ENDPOINT=http://api:5000/price"
#      - "INTERVAL_RANGE_SEC=5"
#
#  loadgen-fast:
#    build:
#      context: ./loadgen
#    image: loadgen:latest
#    depends_on:
#      - api
#    environment:
#      - "ENDPOINT=http://api:5000/fast"
#      - "INTERVAL_RANGE_SEC=1"
#
#  loadgen-slow:
#    build:
#      context: ./loadgen
#    image: loadgen:latest
#    depends_on:
#      - api
#    environment:
#      - "ENDPOINT=http://api:5000/slow"
#      - "INTERVAL_RANGE_SEC=1"
